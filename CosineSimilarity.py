import reimport mathfrom collections import CounterWORD = re.compile(r'\w+')def getCosine(vector1, vector2):    intersection = set(vector1.keys()) & set(vector2.keys())    numerator = sum([vector1[x] * vector2[x] for x in intersection])    sum1 = sum([vector1[x] ** 2 for x in vector1.keys()])    sum2 = sum([vector2[x] ** 2 for x in vector2.keys()])    denominator = math.sqrt(sum1) * math.sqrt(sum2)    if not denominator:        return 0.0    else:        return float(numerator) / denominatordef textToVector(text):    words = WORD.findall(text)    return Counter(words)def givKeywordsValue(text1, text2):    vector1 = textToVector(text1)    vector2 = textToVector(text2)    cosine = round(getCosine(vector1, vector2), 2) * 100    if cosine > 90:        return 1    elif cosine > 80:        return 2    elif cosine > 60:        return 3    elif cosine > 40:        return 4    elif cosine > 20:        return 5    else:        return 6